FORMAT: 1A
HOST: localhost:3000

# Blueprint Docs

Api para o teste da bossabox.com

## Autenticação

+ Esta API usa [JWT] (http://jwt.io/) para autenticação,
+ Token DEVE ser fornecido no cabeçalho `Authorization`,
+ Token DEVE ser fornecido para cada solicitação que requer autenticação,

### Exemplo de Cabeçalho
```
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhNnZoQW8zRkc3dDEiLCJuYW1lIjoiSm9obiBEb2UiLCJpYXQiOjE0NzA1OTg5NzIsImV4cCI6MTQ3MDY4NTM3Mn0.ltA9zZmJKszBJuuV7pTWtY7LzLXrRUfebJDhy_jGMeM
```

## HTTP Methods

Esta API usa verbos HTTP (métodos) da seguinte forma:

+ `GET` - *Leitura/Listagem*
+ `POST` - *Criação*
+ `PUT` - *Atualização*
+ `DELETE` - *Deleção*

## Códigos de status e erros

Essa API usa códigos de status HTTP para se comunicar com a API do consumidor.

+ `200 OK`
+ `201 Created`
+ `204 No Content`
+ `400 Bad Request`
+ `401 Unauthorized`
+ `403 Forbidden`
+ `404 Not Found`
+ `405 Method Not Allowed`
+ `406 Not Acceptable`

# Group Autenticação

## login [/api/login]

Os tokens de acesso são necessários para acessar quase todos os endpoints dessa API.

### Retorna um token JWT [POST]

Permite recuperar o JSON Web Token válido para nome de usuário e senha.

**Endpoint information**

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |
| Has restricted scope    | No  |

+ Request (application/json)
    + Attributes
        + login: `john.doe@mail.com` (string, required) - User email address
        + password: `QXR0mi38a2` (string, required) - User password

+ Response 200 (application/json)
    + Attributes
        + token: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9....` (string) - JSON Web Token.

## Cadastro do usuário [/api/register]

### Criar um novo usuário [POST]

Criar um novo usuário.

+ Email precisa ser único.
+ Senha precisa ter pelo menos 3 caracteres.


**Informações do Endpoint**

|                         |     |
|-------------------------|-----|
| Requires authentication | No  |

+ Request (application/json)
    + Attributes
        + name: `Marcos Marion` (string, required) - Seu nome.
        + email: `john.doe@mail.com` (string, required) - E-mail address.
        + password: `QXR0mi38a2` (string, required) - User password.

+ Response 201

## Group Ferramentas

Coleção de ferramentas

## Ferramentas [/tools{?tag}]

A Question object has the following attributes

+ Parameters
    + tag: node (optional, string) - ID da ferramenta

### Retorna uma coleção de ferramentas [GET]

+ Request (application/json)
    + Headers

            Authorization: JWT <token>

+ Response 200 (application/json)

        [
            {
                "id": 12,
                "title": "hotel",
                "description": "Local app manager. Start apps within your browser, developer tool with local .localhost domain and https out of the box.",
                "link": "https://github.com/typicode/hotel",
                "tags": [
                    "node",
                    "organizing",
                    "webapps",
                    "domain",
                    "developer",
                    "https",
                    "proxy"
                ]
            },
            {
                "id": 15,
                "title": "hotel",
                "description": "Local app manager. Start apps within your browser, developer tool with local .localhost domain and https out of the box.",
                "link": "https://github.com/typicode/hotel",
                "tags": [
                    "node",
                    "organizing",
                    "webapps",
                    "domain",
                    "developer",
                    "https",
                    "proxy",
                    "adasd"
                ]
            }
        ]

## Ferramentas Collection [/tools]

### Criar uma nova ferramenta [POST]

Você pode criar sua própria ferramenta usando esta ação.

+ title (string) - Título
+ link (string) - Link
+ description (string) - Descrição da ferramenta
+ tags (array[string]) - Coleção de tags.

+ Request (application/json)

    + Headers

             Authorization: JWT <token>

    + Body

                {
                    "title": "hotel",
                    "description": "1232173213",
                    "link": "https://www.github.com/typicode/hotel",
                    "tags": [
                        "adasd",
                        "marion",
                        "asdhuahsudsa"
                    ]
                }

+ Response 201 (application/json)

    + Headers

            Location: /tools

    + Body

            {
                "id": 32,
                "title": "hotel",
                "description": "1232173213",
                "link": "https://www.github.com/typicode/hotel",
                "tags": [
                    "adasd",
                    "marion",
                    "asdhuahsudsa"
                ]
            }